{"ast":null,"code":"import { createStore } from 'redux';\nimport authReducer from './reducers';\n/*\nconst initialState = {\n    isAuthorized: true\n  //  isAuthorized: localStorage.getItem('isAuthorized') || false,\n  }\n  \n  const authReducer = (state = initialState, action) => {\n    switch(action.type) {\n      case 'LOGIN':\n        return {\n          ...state,\n          isAuthorized: true,\n        };\n      case 'LOGOUT':\n        return {\n          ...state,\n          isAuthorized: false,\n        };\n      default:\n        return state;\n    }\n  }\n*/\n\nexport default createStore(authReducer);","map":{"version":3,"sources":["/home/pablo/GITHUB/Proyectos personales/my-app/src/redux/store.js"],"names":["createStore","authReducer"],"mappings":"AAAA,SAASA,WAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeD,WAAW,CAACC,WAAD,CAA1B","sourcesContent":["import { createStore} from 'redux';\nimport authReducer from './reducers'\n/*\nconst initialState = {\n    isAuthorized: true\n  //  isAuthorized: localStorage.getItem('isAuthorized') || false,\n  }\n  \n  const authReducer = (state = initialState, action) => {\n    switch(action.type) {\n      case 'LOGIN':\n        return {\n          ...state,\n          isAuthorized: true,\n        };\n      case 'LOGOUT':\n        return {\n          ...state,\n          isAuthorized: false,\n        };\n      default:\n        return state;\n    }\n  }\n*/\n\nexport default createStore(authReducer);"]},"metadata":{},"sourceType":"module"}