{"ast":null,"code":"var _jsxFileName = \"/home/pablo/GITHUB/Proyectos personales/my-app/src/app/components/NewEvent.tsx\";\nimport React from 'react';\nimport { Card, CardContent } from '@material-ui/core';\nimport { Field, Form, Formik } from 'formik';\nimport { CheckboxWithLabel, TextField } from 'formik-material-ui';\nimport { mixed, number, object } from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewEvent() {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(FormikStepper, {\n        validationSchema: object({\n          concurrency: mixed().when('closedSpace', {\n            is: true,\n            then: number().required().max(50, 'there cannot be more than 50 in a closed space due to covid 19 restrictions'),\n            otherwise: number().required()\n          })\n        }),\n        onSubmit: () => {},\n        initialValues: {\n          title: '',\n          description: '',\n          closedSpace: false,\n          concurrency: 0,\n          address: ''\n        },\n        children: /*#__PURE__*/_jsxDEV(Form\n        /*autocmplete=\"off\"*/\n        , {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              name: \"title\",\n              component: TextField,\n              label: \"Event Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"description\",\n              component: TextField,\n              label: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"closedSpace\",\n              type: \"checkbox\",\n              component: CheckboxWithLabel,\n              label: {\n                label: \"does the event take place in a closed space?\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              name: \"concurrency\",\n              type: \"number\",\n              component: TextField,\n              label: \"Concurrency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"address\",\n              component: TextField,\n              label: \"Event Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 13\n  }, this);\n}\n_c = NewEvent;\nexport function FormikStepper({\n  children,\n  ...props\n}) {\n  return /*#__PURE__*/_jsxDEV(Formik, { ...props,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      autoComplete: \"off\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_c2 = FormikStepper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NewEvent\");\n$RefreshReg$(_c2, \"FormikStepper\");","map":{"version":3,"sources":["/home/pablo/GITHUB/Proyectos personales/my-app/src/app/components/NewEvent.tsx"],"names":["React","Card","CardContent","Field","Form","Formik","CheckboxWithLabel","TextField","mixed","number","object","NewEvent","concurrency","when","is","then","required","max","otherwise","title","description","closedSpace","address","label","FormikStepper","children","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,WAAd,QAAgC,mBAAhC;AACA,SAAQC,KAAR,EAAeC,IAAf,EAAqBC,MAArB,QAA8D,QAA9D;AACA,SAAQC,iBAAR,EAA2BC,SAA3B,QAA2C,oBAA3C;AACA,SAAQC,KAAR,EAAeC,MAAf,EAAuBC,MAAvB,QAAoC,KAApC;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAC/B,sBACQ,QAAC,IAAD;AAAA,2BACI,QAAC,WAAD;AAAA,6BACI,QAAC,aAAD;AACA,QAAA,gBAAgB,EAAED,MAAM,CAAC;AACrBE,UAAAA,WAAW,EAAEJ,KAAK,GAAGK,IAAR,CAAa,aAAb,EAA4B;AACrCC,YAAAA,EAAE,EAAC,IADkC;AAErCC,YAAAA,IAAI,EAAEN,MAAM,GAAGO,QAAT,GAAoBC,GAApB,CAAwB,EAAxB,EAA4B,6EAA5B,CAF+B;AAGrCC,YAAAA,SAAS,EAAET,MAAM,GAAGO,QAAT;AAH0B,WAA5B;AADQ,SAAD,CADxB;AAQA,QAAA,QAAQ,EAAE,MAAI,CAAE,CARhB;AASA,QAAA,aAAa,EAAE;AACXG,UAAAA,KAAK,EAAE,EADI;AAEXC,UAAAA,WAAW,EAAE,EAFF;AAGXC,UAAAA,WAAW,EAAE,KAHF;AAIXT,UAAAA,WAAW,EAAC,CAJD;AAKXU,UAAAA,OAAO,EAAE;AALE,SATf;AAAA,+BAiBA,QAAC;AAAK;AAAN;AAAA,kCACA;AAAA,oCACA,QAAC,KAAD;AAAO,cAAA,IAAI,EAAE,OAAb;AAAqB,cAAA,SAAS,EAAEf,SAAhC;AAA2C,cAAA,KAAK,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA,QAAC,KAAD;AAAO,cAAA,IAAI,EAAE,aAAb;AAA2B,cAAA,SAAS,EAAEA,SAAtC;AAAiD,cAAA,KAAK,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,oBAFA,eAGA,QAAC,KAAD;AAAO,cAAA,IAAI,EAAE,aAAb;AAA2B,cAAA,IAAI,EAAC,UAAhC;AAA2C,cAAA,SAAS,EAAED,iBAAtD;AAAyE,cAAA,KAAK,EAAE;AAACiB,gBAAAA,KAAK,EAAE;AAAR;AAAhF;AAAA;AAAA;AAAA;AAAA,oBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAOA;AAAA,oCACA,QAAC,KAAD;AAAO,cAAA,IAAI,EAAE,aAAb;AAA2B,cAAA,IAAI,EAAC,QAAhC;AAAyC,cAAA,SAAS,EAAEhB,SAApD;AAA+D,cAAA,KAAK,EAAC;AAArE;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA,QAAC,KAAD;AAAO,cAAA,IAAI,EAAE,SAAb;AAAuB,cAAA,SAAS,EAAEA,SAAlC;AAA6C,cAAA,KAAK,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,oBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAjBA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADR;AAsCH;KAvCuBI,Q;AAyCxB,OAAO,SAASa,aAAT,CAAuB;AAACC,EAAAA,QAAD;AAAW,KAAGC;AAAd,CAAvB,EAAwE;AAC3E,sBACI,QAAC,MAAD,OAAYA,KAAZ;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,YAAY,EAAC,KAAnB;AAAA,gBAA0BD;AAA1B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;MANeD,a","sourcesContent":["import React from 'react'\nimport {Card, CardContent} from '@material-ui/core'\nimport {Field, Form, Formik, FormikConfig, FormikValues} from 'formik'\nimport {CheckboxWithLabel, TextField} from 'formik-material-ui'\nimport {mixed, number, object} from 'yup';\n\nexport default function NewEvent() {\n    return(\n            <Card>\n                <CardContent>\n                    <FormikStepper\n                    validationSchema={object({\n                        concurrency: mixed().when('closedSpace', {\n                            is:true,\n                            then: number().required().max(50, 'there cannot be more than 50 in a closed space due to covid 19 restrictions'),\n                            otherwise: number().required()\n                        })\n                    })}\n                    onSubmit={()=>{}}\n                    initialValues={{\n                        title: '',\n                        description: '',\n                        closedSpace: false,\n                        concurrency:0,\n                        address: ''\n                    }}\n                    >\n                    <Form /*autocmplete=\"off\"*/> \n                    <div>\n                    <Field name= \"title\" component={TextField} label=\"Event Title\"/>\n                    <Field name= \"description\" component={TextField} label=\"Description\"/>\n                    <Field name= \"closedSpace\" type=\"checkbox\" component={CheckboxWithLabel} label={{label: \"does the event take place in a closed space?\"}}/>\n                    </div>\n\n                    <div>\n                    <Field name= \"concurrency\" type=\"number\" component={TextField} label=\"Concurrency\"/>\n                    <Field name= \"address\" component={TextField} label=\"Event Address\"/>\n                    </div>\n\n                    </Form>\n\n                    </FormikStepper>\n                </CardContent>\n            </Card>\n    )\n}\n\nexport function FormikStepper({children, ...props}: FormikConfig<FormikValues>){\n    return(\n        <Formik {...props}>\n            <Form autoComplete=\"off\">{children}</Form>\n        </Formik>\n    );\n}\n\n    "]},"metadata":{},"sourceType":"module"}