{"ast":null,"code":"var _jsxFileName = \"/home/pablo/GITHUB/Proyectos personales/my-app/src/routes/routes.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport AuthenticatedRoute from '../app/components/AuthenticatedRoute';\nimport Home from '../app/components/home';\nimport SignUpForm from \"../app/components/Login/signUp\";\nimport SignInForm from \"../app/components/Login/SignIn\";\nimport { Redirect } from \"react-router-dom\";\nimport Events from \"../app/components/Events\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Routes(props) {\n  _s();\n\n  const {\n    isAuthorized\n  } = useSelector(state => state.authReducer);\n  /*\n  function handleLogout() {\n    props.signOutUser()\n    // props.history.push(`/`)\n    return <Redirect to=\"/\"/>\n  }\n  */\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign_in\",\n          component: SignInForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign_up\",\n          component: SignUpForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AuthenticatedRoute, {\n          path: \"/events\",\n          component: Events,\n          isAuthenticated: isAuthorized\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Routes, \"0EdFN2y3OmQs0KwVOxdohynunHc=\", false, function () {\n  return [useSelector];\n});\n\n_c = Routes;\n\nconst mapStateToProps = state => ({\n  isAuthorized: state.isAuthorized\n}); //  const { isAuthorized } = useSelector(state => state.auth);\n\n\nconst mapDispatchToProps = dispatch => ({\n  handleLogout() {\n    dispatch({\n      type: 'LOGOUT'\n    });\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 18\n    }, this);\n  }\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Routes);\n\nvar _c;\n\n$RefreshReg$(_c, \"Routes\");","map":{"version":3,"sources":["/home/pablo/GITHUB/Proyectos personales/my-app/src/routes/routes.js"],"names":["React","connect","useSelector","BrowserRouter","Router","Switch","Route","AuthenticatedRoute","Home","SignUpForm","SignInForm","Redirect","Events","Routes","props","isAuthorized","state","authReducer","mapStateToProps","mapDispatchToProps","dispatch","handleLogout","type"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,OAAR,EAAiBC,WAAjB,QAAmC,aAAnC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,kBAAP,MAA+B,sCAA/B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;;AACA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAmBb,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACC,WAAhB,CAApC;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;;AACE,sBACA,QAAC,MAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BAEM,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,SAAS,EAAET;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,SAAS,EAAEE;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,SAAS,EAAED;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,kBAAD;AAAoB,UAAA,IAAI,EAAC,SAAzB;AAAmC,UAAA,SAAS,EAAEG,MAA9C;AAAsD,UAAA,eAAe,EAAEG;AAAvE;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADA;AAaD;;GAvBQF,M;UACkBX,W;;;KADlBW,M;;AAwBT,MAAMK,eAAe,GAAGF,KAAK,KAAK;AAC9BD,EAAAA,YAAY,EAAEC,KAAK,CAACD;AADU,CAAL,CAA7B,C,CAIE;;;AACA,MAAMI,kBAAkB,GAAGC,QAAQ,KAAI;AACnCC,EAAAA,YAAY,GAAE;AACVD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAE;AADD,KAAD,CAAR;AAGA,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AANkC,CAAJ,CAAnC;;AAUF,eAAerB,OAAO,CAACiB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CN,MAA7C,CAAf","sourcesContent":["import React from 'react';\n\nimport {connect, useSelector} from 'react-redux'\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport AuthenticatedRoute from '../app/components/AuthenticatedRoute';\nimport Home from '../app/components/home';\nimport SignUpForm from \"../app/components/Login/signUp\"\nimport SignInForm from \"../app/components/Login/SignIn\"\nimport {Redirect} from \"react-router-dom\";\nimport Events from \"../app/components/Events\"\nfunction Routes(props) {\n  const { isAuthorized } = useSelector(state => state.authReducer);\n\n  /*\n  function handleLogout() {\n    props.signOutUser()\n    // props.history.push(`/`)\n    return <Redirect to=\"/\"/>\n  }\n*/\n  return (\n  <Router>\n    <div className=\"App\">\n\n          <Switch>\n            <Route exact path='/' component={Home} />\n            <Route path=\"/sign_in\" component={SignInForm} />\n            <Route path=\"/sign_up\" component={SignUpForm} />\n            <AuthenticatedRoute path='/events' component={Events} isAuthenticated={isAuthorized} />\n          </Switch>\n    </div>\n  </Router>\n  );\n}\nconst mapStateToProps = state => ({\n    isAuthorized: state.isAuthorized\n  })\n  \n  //  const { isAuthorized } = useSelector(state => state.auth);\n  const mapDispatchToProps = dispatch =>({\n      handleLogout(){\n          dispatch({\n              type: 'LOGOUT'\n          })\n          return <Redirect to=\"/\"/>\n      }\n  }) \n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Routes);"]},"metadata":{},"sourceType":"module"}