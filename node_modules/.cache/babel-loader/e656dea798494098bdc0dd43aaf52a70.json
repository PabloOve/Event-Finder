{"ast":null,"code":"var _jsxFileName = \"/home/pablo/GITHUB/Proyectos personales/my-app/src/app/components/Login/signUp.js\";\nimport React from 'react';\nimport { Formik, Form } from 'formik';\nimport { connect, useSelector } from 'react-redux';\nimport { TextField } from './TextField';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginForm() {\n  const validate = Yup.object().shape({\n    firstName: Yup.string().max(15, 'Must be 15 characters or less').required('Required'),\n    lastName: Yup.string().max(20, 'Must be 20 characters or less').required('Required'),\n    email: Yup.string().email(\"Incorrect email format\").required(\"Please enter a valid email\"),\n    password: Yup.string().required(\"Enter a password\").min(8, \"Password is too short - should be 8 characters minimum\").matches(/(?=.*[0-9])/, \"Password must contain at least a number\"),\n    confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Password must match')\n  });\n  /*\n  function handleLogout() {\n    props.signOutUser()\n    // props.history.push(`/`)\n    return <Redirect to=\"/\"/>\n  }\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-3\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      },\n      validationSchema: validate,\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setSubmitting(true);\n        console.log('hiii', values); //this.handleSubmit(values)\n      },\n      children: ({\n        values,\n        handleChange,\n        handleBlur,\n        handleSubmit\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"my-4 font-weight-bold-display-4\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"First Name\",\n            name: \"firstName\",\n            type: \"text\",\n            value: values.firstName,\n            onChange: handleChange,\n            onBlur: handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Last Name\",\n            name: \"lastName\",\n            type: \"text\",\n            value: values.lastName,\n            onChange: handleChange,\n            onBlur: handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Email\",\n            name: \"Email\",\n            type: \"email\",\n            value: values.email,\n            onChange: handleChange,\n            onBlur: handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Password\",\n            name: \"password\",\n            type: \"password\",\n            value: values.password,\n            onChange: handleChange,\n            onBlur: handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Confirm Password\",\n            name: \"confirmPassword\",\n            value: values.confirmPassword,\n            type: \"password\",\n            onChange: handleChange,\n            onBlur: handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-dark mt-3\",\n            type: \"submit\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger mt-3 ml-3\",\n            type: \"reset\",\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n}\n\n_c = LoginForm;\n\nconst mapStateToProps = state => ({\n  isAuthorized: state.isAuthorized\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loginUser() {\n    dispatch({\n      type: 'LOGIN'\n    });\n  }\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/home/pablo/GITHUB/Proyectos personales/my-app/src/app/components/Login/signUp.js"],"names":["React","Formik","Form","connect","useSelector","TextField","Yup","LoginForm","validate","object","shape","firstName","string","max","required","lastName","email","password","min","matches","confirmPassword","oneOf","ref","values","setSubmitting","console","log","handleChange","handleBlur","handleSubmit","mapStateToProps","state","isAuthorized","mapDispatchToProps","dispatch","loginUser","type"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Formik, Form} from 'formik';\nimport {connect, useSelector} from 'react-redux'\nimport {TextField} from './TextField';\nimport * as Yup from 'yup';\n\nfunction LoginForm() {\n  const validate = Yup.object().shape({\n    firstName: Yup.string()\n    .max(15, 'Must be 15 characters or less')\n    .required('Required'),\n    lastName: Yup.string()\n    .max(20, 'Must be 20 characters or less')\n    .required('Required'),\n    email: Yup.string()\n        .email(\"Incorrect email format\")\n        .required(\"Please enter a valid email\"),\n    password: Yup.string()\n        .required(\"Enter a password\")\n        .min(8,\"Password is too short - should be 8 characters minimum\")\n        .matches(/(?=.*[0-9])/,\"Password must contain at least a number\"),\n    confirmPassword: Yup.string()\n    .oneOf([Yup.ref('password'), null], 'Password must match')\n})\n\n    /*\n    function handleLogout() {\n      props.signOutUser()\n      // props.history.push(`/`)\n      return <Redirect to=\"/\"/>\n    }\n  */\n    return (\n      \n      <div className=\"container mt-3\">\n      <Formik\n        initialValues={{\n          firstName: '',\n          lastName: '',\n          email: '',\n          password: '',\n          confirmPassword: ''\n        }}\n        validationSchema ={validate}\n        onSubmit={(values,{setSubmitting}) => {\n          setSubmitting(true)\n          console.log('hiii',values)\n          //this.handleSubmit(values)\n      }}\n        >\n        {({values, handleChange, handleBlur, handleSubmit}) => (\n          <div>\n          \n            <h1 className=\"my-4 font-weight-bold-display-4\">Sign Up</h1> \n          \n            <form onSubmit={handleSubmit}>\n            <TextField label=\"First Name\" name=\"firstName\" type=\"text\" value={values.firstName} onChange={handleChange} onBlur={handleBlur}/>\n            <TextField label=\"Last Name\" name=\"lastName\" type=\"text\" value={values.lastName} onChange={handleChange} onBlur={handleBlur}/>\n            <TextField label=\"Email\" name=\"Email\" type=\"email\" value={values.email} onChange={handleChange} onBlur={handleBlur}/>\n            <TextField label=\"Password\" name=\"password\" type=\"password\" value={values.password} onChange={handleChange} onBlur={handleBlur}/>\n            <TextField label=\"Confirm Password\" name=\"confirmPassword\" value={values.confirmPassword} type=\"password\" onChange={handleChange} onBlur={handleBlur}/>\n         \n          \n          <button className=\"btn btn-dark mt-3\" type=\"submit\">Register</button>\n          <button className=\"btn btn-danger mt-3 ml-3\" type=\"reset\">Reset</button>\n          \n          </form>\n          </div>\n          \n        )\n        \n        }\n        \n      </Formik>\n     \n      </div>\n    );\n    \n  }\n\n\nconst mapStateToProps = state => ({\n    isAuthorized: state.isAuthorized\n  })\n\n  const mapDispatchToProps = dispatch =>({\n    loginUser(){\n        dispatch({\n            type: 'LOGIN'\n        })\n    }\n}) \n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\n"]},"metadata":{},"sourceType":"module"}