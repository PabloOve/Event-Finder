{"ast":null,"code":"var _jsxFileName = \"/home/pablo/GITHUB/Proyectos personales/my-app/src/app/components/Login/SignIn.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Formik, Form } from 'formik';\nimport { connect, useSelector, useDispatch } from 'react-redux';\nimport { TextField } from './TextField';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SignInForm() {\n  _s();\n\n  const loginUser = useDispatch();\n  const validate = Yup.object().shape({\n    email: Yup.string().email(\"Incorrect email format\").required(\"Please enter a valid email\"),\n    password: Yup.string().required(\"Enter a password\").min(8, \"Password is too short - should be 8 characters minimum\").matches(/(?=.*[0-9])/, \"Password must contain at least a number\")\n  });\n  /*\n  function handleLogout() {\n    props.signOutUser()\n    // props.history.push(`/`)\n    return <Redirect to=\"/\"/>\n  }\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-3\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      },\n      validationSchema: validate,\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setSubmitting(true);\n        loginUser({\n          type: 'LOGIN'\n        }); //this.handleSubmit(values)\n\n        /*#__PURE__*/\n        _jsxDEV(Redirect, {\n          to: '/'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this);\n      },\n      children: ({\n        values,\n        handleChange,\n        handleBlur,\n        handleSubmit\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"my-4 font-weight-bold-display-4\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Email\",\n            name: \"email\",\n            type: \"email\",\n            value: values.email,\n            onChange: handleChange,\n            onBlur: handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Password\",\n            name: \"password\",\n            type: \"password\",\n            value: values.password,\n            onChange: handleChange,\n            onBlur: handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Confirm Password\",\n            name: \"confirmPassword\",\n            value: values.confirmPassword,\n            type: \"password\",\n            onChange: handleChange,\n            onBlur: handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success mt-3\",\n            type: \"submit\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger mt-3 ml-3\",\n            type: \"reset\",\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"forgot-password text-right\",\n            children: [\"Not a member yet? \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/sign_up\",\n              children: \"Sign up for free\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 55\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this);\n}\n\n_s(SignInForm, \"D7H+5qcQmhZrzOjxhRH9pMeycpo=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SignInForm;\nexport default SignInForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInForm\");","map":{"version":3,"sources":["/home/pablo/GITHUB/Proyectos personales/my-app/src/app/components/Login/SignIn.js"],"names":["React","Formik","Form","connect","useSelector","useDispatch","TextField","Yup","SignInForm","loginUser","validate","object","shape","email","string","required","password","min","matches","firstName","lastName","confirmPassword","values","setSubmitting","type","handleChange","handleBlur","handleSubmit"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Formik, Form} from 'formik';\nimport {connect, useSelector, useDispatch} from 'react-redux'\nimport {TextField} from './TextField';\nimport * as Yup from 'yup';\n\nfunction SignInForm() {\n\n  const loginUser = useDispatch()\n  const validate = Yup.object().shape({\n    email: Yup.string()\n        .email(\"Incorrect email format\")\n        .required(\"Please enter a valid email\"),\n    password: Yup.string()\n        .required(\"Enter a password\")\n        .min(8,\"Password is too short - should be 8 characters minimum\")\n        .matches(/(?=.*[0-9])/,\"Password must contain at least a number\"),\n    \n})\n\n    /*\n    function handleLogout() {\n      props.signOutUser()\n      // props.history.push(`/`)\n      return <Redirect to=\"/\"/>\n    }\n  */\n    return (\n      \n      <div className=\"container mt-3\">\n      <Formik\n        initialValues={{\n          firstName: '',\n          lastName: '',\n          email: '',\n          password: '',\n          confirmPassword: ''\n        }}\n        validationSchema ={validate}\n        onSubmit={(values,{setSubmitting}) => {\n          setSubmitting(true)\n          loginUser({type: 'LOGIN'});\n          //this.handleSubmit(values)\n          <Redirect to={ '/' }/>\n      }}\n        >\n        {({values, handleChange, handleBlur, handleSubmit}) => (\n          <div>\n          \n            <h1 className=\"my-4 font-weight-bold-display-4\">Sign Up</h1> \n          \n            <form onSubmit={handleSubmit}>\n            <TextField label=\"Email\" name=\"email\" type=\"email\" value={values.email} onChange={handleChange} onBlur={handleBlur}/>\n            <TextField label=\"Password\" name=\"password\" type=\"password\" value={values.password} onChange={handleChange} onBlur={handleBlur}/>\n            <TextField label=\"Confirm Password\" name=\"confirmPassword\" value={values.confirmPassword} type=\"password\" onChange={handleChange} onBlur={handleBlur}/>\n          \n          <button className=\"btn btn-success mt-3\" type=\"submit\">Login</button>\n          <button className=\"btn btn-danger mt-3 ml-3\" type=\"reset\">Reset</button>\n          <p className=\"forgot-password text-right\">\n                                    Not a member yet? <a href=\"/sign_up\">Sign up for free</a>\n                                </p>\n          </form>\n          </div>\n          \n        )\n        \n        }\n        \n      </Formik>\n     \n      </div>\n    );\n    \n  }\n\n\n\n\n\nexport default (SignInForm);"]},"metadata":{},"sourceType":"module"}