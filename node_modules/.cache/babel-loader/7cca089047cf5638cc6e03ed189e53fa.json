{"ast":null,"code":"var _jsxFileName = \"/home/pablo/GITHUB/Proyectos personales/my-app/src/app/components/Login/signUp.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Formik, Form, useFormik } from 'formik';\nimport { connect, useSelector } from 'react-redux';\nimport { TextField } from './TextField';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginForm() {\n  _s();\n\n  const validate = Yup.object().shape({\n    firstName: Yup.string().max(15, 'Must be 15 characters or less').required('Required'),\n    lastName: Yup.string().max(20, 'Must be 20 characters or less').required('Required'),\n    email: Yup.string().email(\"Incorrect email format\").required(\"Please enter a valid email\"),\n    password: Yup.string().required(\"Enter a password\").min(8, \"Password is too short - should be 8 characters minimum\").matches(/(?=.*[0-9])/, \"Password must contain at least a number\"),\n    confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Password must match')\n  });\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    },\n    validationSchema: {\n      validate\n    }\n  });\n  /*\n  function handleLogout() {\n    props.signOutUser()\n    // props.history.push(`/`)\n    return <Redirect to=\"/\"/>\n  }\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-3\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"my-4 font-weight-bold-display-4\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"First Name\",\n            name: \"firstName\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Last Name\",\n            name: \"lastName\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Email\",\n            name: \"Email\",\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Password\",\n            name: \"password\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Confirm Password\",\n            name: \"confirmPassword\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-dark mt-3\",\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger mt-3 ml-3\",\n          type: \"reset\",\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n}\n\n_s(LoginForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = LoginForm;\n\nconst mapStateToProps = state => ({\n  isAuthorized: state.isAuthorized\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loginUser() {\n    dispatch({\n      type: 'LOGIN'\n    });\n  }\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/home/pablo/GITHUB/Proyectos personales/my-app/src/app/components/Login/signUp.js"],"names":["React","Formik","Form","useFormik","connect","useSelector","TextField","Yup","LoginForm","validate","object","shape","firstName","string","max","required","lastName","email","password","min","matches","confirmPassword","oneOf","ref","formik","initialValues","validationSchema","mapStateToProps","state","isAuthorized","mapDispatchToProps","dispatch","loginUser","type"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Formik, Form, useFormik} from 'formik';\nimport {connect, useSelector} from 'react-redux'\nimport {TextField} from './TextField';\nimport * as Yup from 'yup';\n\nfunction LoginForm() {\n\n\n  const validate = Yup.object().shape({\n    firstName: Yup.string()\n    .max(15, 'Must be 15 characters or less')\n    .required('Required'),\n    lastName: Yup.string()\n    .max(20, 'Must be 20 characters or less')\n    .required('Required'),\n    email: Yup.string()\n        .email(\"Incorrect email format\")\n        .required(\"Please enter a valid email\"),\n    password: Yup.string()\n        .required(\"Enter a password\")\n        .min(8,\"Password is too short - should be 8 characters minimum\")\n        .matches(/(?=.*[0-9])/,\"Password must contain at least a number\"),\n    confirmPassword: Yup.string()\n    .oneOf([Yup.ref('password'), null], 'Password must match')\n})\nconst formik = useFormik({initialValues: {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n},\nvalidationSchema: {validate}\n}\n)\n    /*\n    function handleLogout() {\n      props.signOutUser()\n      // props.history.push(`/`)\n      return <Redirect to=\"/\"/>\n    }\n  */\n    return (\n      <div className=\"container mt-3\">\n      <Formik>\n  \n          <div>\n            <h1 className=\"my-4 font-weight-bold-display-4\">Sign Up</h1> \n          <Form>\n            <TextField label=\"First Name\" name=\"firstName\" type=\"text\" />\n            <TextField label=\"Last Name\" name=\"lastName\" type=\"text\"/>\n            <TextField label=\"Email\" name=\"Email\" type=\"email\"/>\n            <TextField label=\"Password\" name=\"password\" type=\"password\"/>\n            <TextField label=\"Confirm Password\" name=\"confirmPassword\" type=\"password\"/>\n          </Form>\n          <button className=\"btn btn-dark mt-3\" type=\"submit\">Register</button>\n          <button className=\"btn btn-danger mt-3 ml-3\" type=\"reset\">Reset</button>\n          </div>\n        \n          </Formik>\n     \n      </div>\n    );\n    \n  }\n\n\nconst mapStateToProps = state => ({\n    isAuthorized: state.isAuthorized\n  })\n\n  const mapDispatchToProps = dispatch =>({\n    loginUser(){\n        dispatch({\n            type: 'LOGIN'\n        })\n    }\n}) \n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\n"]},"metadata":{},"sourceType":"module"}